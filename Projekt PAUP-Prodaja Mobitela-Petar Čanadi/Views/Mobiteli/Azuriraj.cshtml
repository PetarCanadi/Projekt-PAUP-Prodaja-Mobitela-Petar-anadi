@using Projekt_PAUP_Prodaja_Mobitela_Petar_Čanadi.Models
@model Mobitel

@{
    ViewBag.Title = "Azuriranje " + Model.Naziv + " " + Model.Proizvodjac;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    @if (ViewBag.Novi != null && ViewBag.Novi)
    {
        <h2>Kreiranje novog mobitela</h2>
    }
    else
    {
        <h2>Azuriraj podataka o mobitelima</h2>
        <h3>@Model.Naziv @Model.Proizvodjac</h3>
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "Ispravite podatke", new { @class = "text-danger" })

        @(!(ViewBag.Novi != null && ViewBag.Novi))
        {
            <div class="form-group row">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.ID, new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
        }
        <div class="form-group row">
            @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Naziv, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Proizvodjac, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Proizvodjac, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Proizvodjac, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Cijena, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Cijena, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cijena, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Opis, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.GodinaModela, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EnumDropDownListFor(model => model.GodinaModela, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GodinaModela, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "Spremanje nije uspjelo!", new { @class = "text-danger" })
        <div class="form-group row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">Spremi</button>
                @Html.ActionLink("Povratak bez spremanja", "Popis", "Mobiteli", new { @class = "btn btn-secondary ml-2" })
            </div>
        </div>
    }
</div>
